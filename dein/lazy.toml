# Design

[[plugins]]
repo = "jbyuki/contextmenu.nvim"
on_lua = "contextmenu"

# Dashboard

[[plugins]]
repo = "glepnir/dashboard-nvim"
on_event = "VimEnter"

# Keys

[[plugins]]
repo = "folke/which-key.nvim"
on_event = "VimEnter"
hook_post_source = """
    lua require("nvim-which-key")
"""

# Motion

[[plugins]]
repo = "phaazon/hop.nvim"
on_lua = "hop"

# Format

[[plugins]]
repo = "sbdchd/neoformat"
on_cmd = [
    "Neoformat"
]
hook_post_source = """
    lua require("nvim-formatter")
"""

[[plugins]]
repo = "junegunn/vim-easy-align"
on_map = "<Plug>(EasyAlign)"

# LSP

[[plugins]]
repo = "ray-x/lsp_signature.nvim"
normalized_name = "lsp-signature"
on_lua = "lsp_signature"

[[plugins]]
repo = "rmagatti/goto-preview"
on_lua = "goto-preview"

[[plugins]]
repo = "kosayoda/nvim-lightbulb"
on_event = "BufEnter"
hook_post_source = """
    lua require("nvim-lightbulb-config")
"""

[[plugins]]
repo = "folke/trouble.nvim"
on_cmd = [
    "Trouble",
    "TroubleToggle"
]
hook_post_source = """
    lua require("trouble").setup()
"""

[[plugins]]
repo = "jubnzv/virtual-types.nvim"
on_lua = "virtualtypes"

[[plugins]]
repo = "ahmedkhalf/lsp-rooter.nvim"
on_lua = "lsp-rooter"

[[plugins]]
repo = "pierreglaser/folding-nvim"
on_lua = "folding"

# Symbols

[[plugins]]
repo = "liuchengxu/vista.vim"
on_cmd = [
    "Vista"
]
hook_source = """
    lua require("nvim-vista")
"""

[[plugins]]
repo = "pechorin/any-jump.vim"
on_cmd = [
    "AnyJump",
    "AnyJumpVisual",
    "AnyJumpLastResults"
]
hook_source = """
    let g:any_jump_disable_default_keybindings = 1
"""

# Building

[[plugins]]
repo = "johnsyweb/vim-makeshift"
on_source = "neomake"

[[plugins]]
repo = "neomake/neomake"
on_source = "ultest"
on_cmd = [
    "Neomake",
    "NeomakeProject"
]
hook_post_source = """
    nnoremap <F5> <cmd>NeomakeProject<cr>
"""

# Testing

[[plugins]]
repo = "vim-test/vim-test"
on_source = "ultest"
hook_post_source = """
    let test#strategy = "neomake"
"""

[[plugins]]
repo = "rcarriga/vim-ultest"
on_cmd = [
    "Ultest",
    "UltestNearest",
    "UltestDebug",
    "UltestDebugNearest",
    "UltestAttach",
    "UltestSummary",
    "UltestSummaryOpen"
]
hook_source = """
    lua require("nvim-ultest")
"""

# Debugging (DAP)

[[plugins]]
repo = "mfussenegger/nvim-dap"
on_lua = "dap"
hook_post_source = """
    lua require("nvim-dap")
    lua require("nvim-dap.js-ts")
"""

[[plugins]]
repo = "theHamsta/nvim-dap-virtual-text"
on_source = "dap"

[[plugins]]
repo = "rcarriga/nvim-dap-ui"
on_source = "dap"

# Install vscode-cpptools using vimspector
[[plugins]]
repo = "puremourning/vimspector"
build = "python3 install_gadget.py --enable-c"

# Completions

[[plugins]]
repo = "hrsh7th/nvim-compe"
on_event = "InsertEnter"
hook_post_source = """
    lua require('nvim-compe')
"""

[[plugins]]
repo = "L3MON4D3/LuaSnip"
on_source = "compe"
hook_source = """
    lua require("nvim-luasnip")
"""

[[plugins]]
repo = "rafamadriz/friendly-snippets"
on_source = "LuaSnip"

[[plugins]]
repo = "tzachar/compe-tabnine"
on_source = "compe"
build = """
    ./install.sh
"""

# Editor

[[plugins]]
repo = "windwp/nvim-autopairs"
on_event = "InsertEnter"
hook_post_source = """
    lua require("nvim-autopairs-config")
"""

[[plugins]]
repo = "windwp/nvim-autospace"
on_event = "InsertEnter"

[[plugins]]
repo = "monaqa/dial.nvim"
on_map = [
    "<C-a>",
    "<C-x>"
]

[[plugins]]
repo = "lukas-reineke/indent-blankline.nvim"
on_event = "BufReadPre"
hook_post_source = """
    lua require("nvim-indentline")
"""

[[plugins]]
repo = "bfredl/nvim-miniyank"
on_map = "<Plug>(miniyank"

[[plugins]]
repo = "AndrewRadev/splitjoin.vim"
on_map = [
    "gS",
    "gJ"
]

[[plugins]]
repo = "arecarn/vim-fold-cycle"
on_map = [
    "<BS>",
    "<CR>"
]

[[plugins]]
repo = "lambdalisue/readablefold.vim"
on_event = "BufReadPre"
hook_post_source = """
    let g:readablefold#foldspace_char = ""
"""

[[plugins]]
repo = "RRethy/vim-hexokinase"
on_event = "BufReadPre"
hook_source = """
    lua require("nvim-hexokinase")
"""
build = """
    make hexokinase
"""

[[plugins]]
repo = "folke/zen-mode.nvim"
on_cmd = [
    "ZenMode"
]
hook_post_source = """
    lua require("nvim-zen-mode")
"""

[[plugins]]
repo = "folke/twilight.nvim"
on_source = "zen-mode"

# Window

[[plugins]]
repo = "t9md/vim-choosewin"
on_map = "<Plug>(choosewin)"
hook_source = """
    let g:choosewin_overlay_enable          = 1
    let g:choosewin_overlay_clear_multibyte = 1
"""

# Cheat sheet

[[plugins]]
repo = "sudormrfbin/cheatsheet.nvim"
on_cmd = "Cheatsheet"

# Indent

[[plugins]]
repo = "tpope/vim-sleuth"
on_event = "BufReadPre"

# Comment

[[plugins]]
repo = "b3nj5m1n/kommentary"
on_map = "gc"
hook_post_source = """
    lua require("nvim-comment")
"""

[[plugins]]
repo = "JoosepAlviste/nvim-ts-context-commentstring"
on_source = "kommentary"

[[plugins]]
repo = "dstein64/nvim-scrollview"
on_event = "VimEnter"
hook_post_source = """
    let g:scrollview_nvim_14040_workaround = 1
    let g:scrollview_hide_on_intersect     = 1
"""

# Command

[[plugins]]
repo = "gelguy/wilder.nvim"
on_event = "CmdlineEnter"
hook_post_source = """
    call wilder#set_option("num_workers", 8)
    call wilder#enable_cmdline_enter()

    set wildcharm=<Tab>

    lua require("nvim-wilder")
"""

[[plugins]]
repo = "Potato1682/cpsm"
on_source = "wilder"
build = "sh -c 'PY3=ON ./install.sh'"

# Treesitter

[[plugins]]
repo = "mizlan/iswap.nvim"
on_cmd = "ISwap"
on_source = "treesitter"
hook_post_source = """
    lua require("nvim-swap")
"""

# Search

[[plugins]]
repo = "nvim-telescope/telescope.nvim"
on_cmd = "Telescope"
on_lua = "telescope"
hook_post_source = """
    lua require("nvim-telescope")
"""

# Files

[[plugins]]
repo = "kyazdani42/nvim-tree.lua"
on_cmd = [
    "NvimTreeToggle",
    "NvimTreeOpen"
]
hook_source = """
    lua require("nvim-explorer")
"""
depends = "nonicons"

[[plugins]]
repo = "editorconfig/editorconfig-vim"
on_event = "BufReadPre"

# Git

[[plugins]]
repo = "lewis6991/gitsigns.nvim"
on_event = "VimEnter"
hook_post_source = """
    lua require("nvim-gitsigns")
"""

[[plugins]]
repo = "TimUntersberger/neogit"
on_cmd = "Neogit"
hook_post_source = """
    lua require("nvim-neogit")
"""

[[plugins]]
repo = "sindrets/diffview.nvim"
on_source = "neogit"
hook_post_source = """
    lua require("diffview").setup {}
"""

[[plugins]]
repo = "samoshkin/vim-mergetool"
on_cmd = [
    "MergetoolToggle",
    "MergetoolStart"
]
hook_post_source = """
    let g:mergetool_layout = "mr"
    let g:mergetool_prefer_revision = "local"
"""

# GitHub

[[plugins]]
repo = "pwntester/octo.nvim"
on_cmd = "Octo"
if = "executable('gh')"
hook_post_source = """
    lua require("nvim-github")
"""

# Containers

[[plugins]]
repo = "kkvh/vim-docker-tools"
on_cmd = [
    "DockerToolsOpen",
    "DockerToolsToggle",
    "DockerToolsSetHost"
]

[[plugins]]
repo = "jamestthompson3/nvim-remote-containers"
on_cmd = [
    "AttachToContainer",
    "BuildImage"
]

# Documents

[[plugins]]
repo = "kkoomen/vim-doge"
on_map = "<leader>*"
hook_post_update = """
    call doge#install()
"""

# Database

[[plugins]]
repo = "tpope/vim-dadbod"
on_source = [
    "dadbod-completion",
    "dadbod-ui"
]

[[plugins]]
repo = "kristijanhusak/vim-dadbod-completion"
on_source = "compe"

[[plugins]]
repo = "kristijanhusak/vim-dadbod-ui"
on_cmd = [
    "DBUI",
    "DBUIToggle",
    "DBUIAddConnection",
    "DBUIFindBuffer",
    "DBUIRenameBuffer",
]

[[plugins]]
repo = "jsborjesson/vim-uppercase-sql"
on_ft = "sql"

[[plugins]]
repo = "tami5/sql.nvim"
on_lua = "sql"

# Spell

[[plugins]]
repo = "lewis6991/spellsitter.nvim"
on_event = "VimEnter"
hook_post_source = """
    lua require("nvim-spell")
"""

# Rest Client

[[plugins]]
repo = "NTBBloodbath/rest.nvim"
on_map = [
    "<Plug>RestNvim",
    "<Plug>RestNvimPreview"
]

# Terminal

[[plugins]]
repo = "akinsho/nvim-toggleterm.lua"
on_cmd = [
    "ToggleTerm",
    "ToggleTermOpenAll"
]
hook_post_source = """
    lua require("toggleterm").setup({})
"""

# Todos

[[plugins]]
repo = "folke/todo-comments.nvim"
on_cmd = [
    "TodoTrouble"
]
on_source = "trouble.nvim"
hook_post_source = """
    lua require("todo-comments").setup()
"""

# Undos

[[plugins]]
repo = "mbbill/undotree"
on_cmd = [
    "UndotreeToggle",
    "UndotreeShow"
]
hook_source = """
    let g:undotree_SetFocusWhenToggle = 1
"""

# GUI

[[plugins]]
repo = "thinca/vim-fontzoom"
gui = 1

# Discord

[[plugins]]
repo = "andweeb/presence.nvim"
hook_post_source = """
    lua require("presence"):setup()
"""

# Profiler

[[plugins]]
repo = "dstein64/vim-startuptime"
on_cmd = "StartupTime"
hook_source = """
    let g:startuptime_tries = 10
"""

# Lua

[[plugins]]
repo = "tjdevries/nlua.nvim"
on_lua = "nlua"

[[plugins]]
repo = "nvim-lua/plenary.nvim"
on_lua = "plenary"

[[plugins]]
repo = "RishabhRD/popfix"
on_lua = "popfix"

[[plugins]]
repo = "jbyuki/one-small-step-for-vimkind"
on_lua = "osv"

# Java

[[plugins]]
repo = "mfussenegger/nvim-jdtls"
on_lua = "jdtls"

[[plugins]]
repo = "krisajenkins/vim-java-sql"
on_ft = "java"

# Markdown

[[plugins]]
repo = "iamcco/markdown-preview.nvim"
on_ft = [
    "markdown",
    "pandoc.markdown",
    "rmd"
]
build = """
    sh -c "cd app && yarn install"
"""

[[plugins]]
repo = "jghauser/follow-md-links.nvim"
on_ft = [
    "markdown",
    "pandoc.markdown"
]
hook_post_source = """
    lua require("follow-md-links")
"""

[[plugins]]
repo = "dkarter/bullets.vim"
on_ft = [
    "markdown",
    "text",
    "gitcommit",
    "scratch"
]

# Tailwind CSS

[[plugins]]
repo = "steelsojka/headwind.nvim"
on_ft = [
    "html",
    "pug",
    "vue",
    "javascriptreact",
    "javascript.jsx",
    "typescriptreact",
    "typescript.tsx",
    "ejs"
]
hook_post_source = """
    lua require("headwind").setup()
"""

# Typescript

[[plugins]]
repo = "jose-elias-alvarez/null-ls.nvim"
on_ft = [
    "javascript",
    "javascriptreact",
    "javascript.jsx",
    "typescript",
    "typescriptreact",
    "typescript.tsx"
]
hook_post_source = """
    lua require("null-ls").setup({})
"""

[[plugins]]
repo = "jose-elias-alvarez/nvim-lsp-ts-utils"
on_source = "null-ls"

# Rust

[[plugins]]
repo = "simrat39/rust-tools.nvim"
on_ft = "rust"

# Python

[[plugins]]
repo = "mfussenegger/nvim-dap-python"
on_lua = "dap-python"

# Log

[[plugins]]
repo = "MTDL9/vim-log-highlighting"
on_ft = "log"

# CSV and TSV

[[plugins]]
repo = "mechatroner/rainbow_csv"
on_ft = [
    "csv",
    "csv_pipe",
    "tsv"
]

# Colors

[[plugins]]
repo = "powerman/vim-plugin-AnsiEsc"
on_event = "BufReadPre"

